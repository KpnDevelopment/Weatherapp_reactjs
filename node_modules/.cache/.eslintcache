[{"/home/kpndev/Documents/DEVELOPMENTS/WEBDEVELOPMENTS/Reactjs/weatherapp/src/index.js":"1","/home/kpndev/Documents/DEVELOPMENTS/WEBDEVELOPMENTS/Reactjs/weatherapp/src/reportWebVitals.js":"2","/home/kpndev/Documents/DEVELOPMENTS/WEBDEVELOPMENTS/Reactjs/weatherapp/src/App.js":"3","/home/kpndev/Documents/DEVELOPMENTS/WEBDEVELOPMENTS/Reactjs/weatherapp/src/Componets/Weather.jsx":"4","/home/kpndev/Documents/DEVELOPMENTS/WEBDEVELOPMENTS/Reactjs/weatherapp/src/api/fetchWeather.js":"5"},{"size":547,"mtime":1621564196758,"results":"6","hashOfConfig":"7"},{"size":362,"mtime":1621521715421,"results":"8","hashOfConfig":"7"},{"size":175,"mtime":1621523658898,"results":"9","hashOfConfig":"7"},{"size":4032,"mtime":1621621397440,"results":"10","hashOfConfig":"7"},{"size":338,"mtime":1621600132242,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"107ncst",{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/kpndev/Documents/DEVELOPMENTS/WEBDEVELOPMENTS/Reactjs/weatherapp/src/index.js",[],"/home/kpndev/Documents/DEVELOPMENTS/WEBDEVELOPMENTS/Reactjs/weatherapp/src/reportWebVitals.js",[],"/home/kpndev/Documents/DEVELOPMENTS/WEBDEVELOPMENTS/Reactjs/weatherapp/src/App.js",[],"/home/kpndev/Documents/DEVELOPMENTS/WEBDEVELOPMENTS/Reactjs/weatherapp/src/Componets/Weather.jsx",["23","24"],"import React, { useState } from \"react\";\nimport { fetchWeather } from \"../api/fetchWeather\";\nimport \"./Weather.css\";\nimport moment from \"moment\";\nimport {\n  Container,\n  Row,\n  Col,\n  Badge,\n  Card,\n  Form,\n  InputGroup,\n} from \"react-bootstrap\";\n\nfunction Weather() {\n  const [query, setQuery] = useState(\"\");\n  const [weather, setWeather] = useState({});\n  const [wc, setWc] = useState(false); //umount and mount state wc=WeatherCard\n\n  const search = async (e) => {\n    if (e.key === \"Enter\") {\n      const data = await fetchWeather(query);\n      console.log(data);\n      setWeather(data);\n      setQuery(\"\");\n      setWc(!wc); //umount the weatherCard\n    }\n  };\n\n  return (\n    <div className=\"Weather\">\n      <Card className=\"main-container\">\n        <Row>\n          <InputGroup size=\"sm\">\n            <Form.Control\n              type=\"text\"\n              className=\"search\"\n              placeholder=\"Search..\"\n              value={query}\n              onChange={(e) => setQuery(e.target.value)}\n              onKeyPress={search}\n            />\n          </InputGroup>\n        </Row>\n        {/* mount umount the card */}\n        {wc && (\n          <Card\n            className=\"card\"\n            style={{\n              width: \"40rem\",\n            }}\n          >\n            <Card.Body className=\"card-body\">\n              {weather.main && (\n                <div className=\"city\">\n                  <h2 className=\"city-name\">\n                    <span>{weather.name}</span>\n                    <Badge className=\"country\" variant=\"warning\">\n                      {weather.sys.country}\n                    </Badge>\n                  </h2>\n                  <div className=\"city-temp\" style={{ fontSize: \"10rem\" }}>\n                    <span className=\"temp\">\n                      {Math.round(weather.main.temp)}\n                    </span>\n                    <Badge style={{ color: \"red\", fontSize: \"2rem\" }}>\n                      &deg;C\n                    </Badge>\n                    <div className=\"more-temp\">\n                      <h3>\n                        max:\n                        {Math.round(weather.main.temp_max)}\n                        <Badge\n                          style={{ background: \"none\", color: \"blue\" }}\n                          variant=\"secondary\"\n                        >\n                          &deg;C\n                        </Badge>\n                      </h3>\n                      <h3>\n                        min:\n                        {Math.round(weather.main.temp_min)}\n                        <Badge\n                          style={{ background: \"none\", color: \"blue\" }}\n                          variant=\"secondary\"\n                        >\n                          &deg;C\n                        </Badge>\n                      </h3>\n                    </div>\n                    <div className=\"sun\">\n                      <h4>\n                        Sunrise <br />{\" \"}\n                        {new Date(\n                          weather.sys.sunrise * 1000\n                        ).toLocaleTimeString(\"en-IN\")}\n                      </h4>\n                      <h4>\n                        Sunset <br />{\" \"}\n                        {new Date(weather.sys.sunset * 1000).toLocaleTimeString(\n                          \"en-IN\"\n                        )}\n                      </h4>\n                    </div>\n\n                    <h5>{moment().format(\"dddd\")}</h5>\n                    <h5>{moment().format(\"LL\")}</h5>\n                  </div>\n                  <div className=\"info\">\n                    <img\n                      src={`https://openweathermap.org/img/wn/${weather.weather[0].icon}@2x.png`}\n                      alt={weather.weather[0].description}\n                      className=\"city-icon\"\n                    />\n                    <h6>{weather.weather[0].description}</h6>\n                  </div>\n                </div>\n              )}\n            </Card.Body>\n          </Card>\n        )}\n      </Card>\n    </div>\n  );\n}\n\nexport default Weather;\n","/home/kpndev/Documents/DEVELOPMENTS/WEBDEVELOPMENTS/Reactjs/weatherapp/src/api/fetchWeather.js",[],{"ruleId":"25","severity":1,"message":"26","line":6,"column":3,"nodeType":"27","messageId":"28","endLine":6,"endColumn":12},{"ruleId":"25","severity":1,"message":"29","line":8,"column":3,"nodeType":"27","messageId":"28","endLine":8,"endColumn":6},"no-unused-vars","'Container' is defined but never used.","Identifier","unusedVar","'Col' is defined but never used."]