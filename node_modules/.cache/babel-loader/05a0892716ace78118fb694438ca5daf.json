{"ast":null,"code":"import _regeneratorRuntime from\"/home/kpndev/Documents/DEVELOPMENTS/WEBDEVELOPMENTS/Reactjs/weatherapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/kpndev/Documents/DEVELOPMENTS/WEBDEVELOPMENTS/Reactjs/weatherapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/home/kpndev/Documents/DEVELOPMENTS/WEBDEVELOPMENTS/Reactjs/weatherapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from\"react\";import{fetchWeather}from\"../api/fetchWeather\";import\"./Weather.css\";import moment from\"moment\";import{Container,Row,Col,Badge,Card,Form,InputGroup}from\"react-bootstrap\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function Weather(){var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),query=_useState2[0],setQuery=_useState2[1];var _useState3=useState({}),_useState4=_slicedToArray(_useState3,2),weather=_useState4[0],setWeather=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),wc=_useState6[0],setWc=_useState6[1];//umount and mount state wc=WeatherCard\nvar search=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(e){var data;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(!(e.key===\"Enter\")){_context.next=8;break;}_context.next=3;return fetchWeather(query);case 3:data=_context.sent;console.log(data);setWeather(data);setQuery(\"\");setWc(!wc);//umount the weatherCard\ncase 8:case\"end\":return _context.stop();}}},_callee);}));return function search(_x){return _ref.apply(this,arguments);};}();return/*#__PURE__*/_jsx(\"div\",{className:\"Weather\",children:/*#__PURE__*/_jsxs(Card,{className:\"main-container\",children:[/*#__PURE__*/_jsx(Row,{children:/*#__PURE__*/_jsx(InputGroup,{size:\"sm\",children:/*#__PURE__*/_jsx(Form.Control,{type:\"text\",className:\"search\",placeholder:\"Search..\",value:query,onChange:function onChange(e){return setQuery(e.target.value);},onKeyPress:search})})}),wc&&/*#__PURE__*/_jsx(Card,{className:\"card\",style:{width:\"40rem\"},children:/*#__PURE__*/_jsx(Card.Body,{className:\"card-body\",children:weather.main&&/*#__PURE__*/_jsxs(\"div\",{className:\"city\",children:[/*#__PURE__*/_jsxs(\"h2\",{className:\"city-name\",children:[/*#__PURE__*/_jsx(\"span\",{children:weather.name}),/*#__PURE__*/_jsx(Badge,{className:\"country\",variant:\"warning\",children:weather.sys.country})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"city-temp\",style:{fontSize:\"10rem\"},children:[/*#__PURE__*/_jsx(\"span\",{className:\"temp\",children:Math.round(weather.main.temp)}),/*#__PURE__*/_jsx(Badge,{style:{color:\"red\",fontSize:\"2rem\"},children:\"\\xB0C\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"more-temp\",children:[/*#__PURE__*/_jsxs(\"h3\",{children:[\"max:\",Math.round(weather.main.temp_max),/*#__PURE__*/_jsx(Badge,{style:{background:\"none\",color:\"blue\"},variant:\"secondary\",children:\"\\xB0C\"})]}),/*#__PURE__*/_jsxs(\"h3\",{children:[\"min:\",Math.round(weather.main.temp_min),/*#__PURE__*/_jsx(Badge,{style:{background:\"none\",color:\"blue\"},variant:\"secondary\",children:\"\\xB0C\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"sun\",children:[/*#__PURE__*/_jsxs(\"h4\",{children:[\"Sunrise \",/*#__PURE__*/_jsx(\"br\",{}),\" \",new Date(weather.sys.sunrise*1000).toLocaleTimeString(\"en-IN\")]}),/*#__PURE__*/_jsxs(\"h4\",{children:[\"Sunset \",/*#__PURE__*/_jsx(\"br\",{}),\" \",new Date(weather.sys.sunset*1000).toLocaleTimeString(\"en-IN\")]})]}),/*#__PURE__*/_jsx(\"h5\",{children:moment().format(\"dddd\")}),/*#__PURE__*/_jsx(\"h5\",{children:moment().format(\"LL\")})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"info\",children:[/*#__PURE__*/_jsx(\"img\",{src:\"https://openweathermap.org/img/wn/\".concat(weather.weather[0].icon,\"@2x.png\"),alt:weather.weather[0].description,className:\"city-icon\"}),/*#__PURE__*/_jsx(\"h6\",{children:weather.weather[0].description})]})]})})})]})});}export default Weather;","map":{"version":3,"sources":["/home/kpndev/Documents/DEVELOPMENTS/WEBDEVELOPMENTS/Reactjs/weatherapp/src/Componets/Weather.jsx"],"names":["React","useState","fetchWeather","moment","Container","Row","Col","Badge","Card","Form","InputGroup","Weather","query","setQuery","weather","setWeather","wc","setWc","search","e","key","data","console","log","target","value","width","main","name","sys","country","fontSize","Math","round","temp","color","temp_max","background","temp_min","Date","sunrise","toLocaleTimeString","sunset","format","icon","description"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { fetchWeather } from \"../api/fetchWeather\";\nimport \"./Weather.css\";\nimport moment from \"moment\";\nimport {\n  Container,\n  Row,\n  Col,\n  Badge,\n  Card,\n  Form,\n  InputGroup,\n} from \"react-bootstrap\";\n\nfunction Weather() {\n  const [query, setQuery] = useState(\"\");\n  const [weather, setWeather] = useState({});\n  const [wc, setWc] = useState(false); //umount and mount state wc=WeatherCard\n\n  const search = async (e) => {\n    if (e.key === \"Enter\") {\n      const data = await fetchWeather(query);\n      console.log(data);\n      setWeather(data);\n      setQuery(\"\");\n      setWc(!wc); //umount the weatherCard\n    }\n  };\n\n  return (\n    <div className=\"Weather\">\n      <Card className=\"main-container\">\n        <Row>\n          <InputGroup size=\"sm\">\n            <Form.Control\n              type=\"text\"\n              className=\"search\"\n              placeholder=\"Search..\"\n              value={query}\n              onChange={(e) => setQuery(e.target.value)}\n              onKeyPress={search}\n            />\n          </InputGroup>\n        </Row>\n        {/* mount umount the card */}\n        {wc && (\n          <Card\n            className=\"card\"\n            style={{\n              width: \"40rem\",\n            }}\n          >\n            <Card.Body className=\"card-body\">\n              {weather.main && (\n                <div className=\"city\">\n                  <h2 className=\"city-name\">\n                    <span>{weather.name}</span>\n                    <Badge className=\"country\" variant=\"warning\">\n                      {weather.sys.country}\n                    </Badge>\n                  </h2>\n                  <div className=\"city-temp\" style={{ fontSize: \"10rem\" }}>\n                    <span className=\"temp\">\n                      {Math.round(weather.main.temp)}\n                    </span>\n                    <Badge style={{ color: \"red\", fontSize: \"2rem\" }}>\n                      &deg;C\n                    </Badge>\n                    <div className=\"more-temp\">\n                      <h3>\n                        max:\n                        {Math.round(weather.main.temp_max)}\n                        <Badge\n                          style={{ background: \"none\", color: \"blue\" }}\n                          variant=\"secondary\"\n                        >\n                          &deg;C\n                        </Badge>\n                      </h3>\n                      <h3>\n                        min:\n                        {Math.round(weather.main.temp_min)}\n                        <Badge\n                          style={{ background: \"none\", color: \"blue\" }}\n                          variant=\"secondary\"\n                        >\n                          &deg;C\n                        </Badge>\n                      </h3>\n                    </div>\n                    <div className=\"sun\">\n                      <h4>\n                        Sunrise <br />{\" \"}\n                        {new Date(\n                          weather.sys.sunrise * 1000\n                        ).toLocaleTimeString(\"en-IN\")}\n                      </h4>\n                      <h4>\n                        Sunset <br />{\" \"}\n                        {new Date(weather.sys.sunset * 1000).toLocaleTimeString(\n                          \"en-IN\"\n                        )}\n                      </h4>\n                    </div>\n\n                    <h5>{moment().format(\"dddd\")}</h5>\n                    <h5>{moment().format(\"LL\")}</h5>\n                  </div>\n                  <div className=\"info\">\n                    <img\n                      src={`https://openweathermap.org/img/wn/${weather.weather[0].icon}@2x.png`}\n                      alt={weather.weather[0].description}\n                      className=\"city-icon\"\n                    />\n                    <h6>{weather.weather[0].description}</h6>\n                  </div>\n                </div>\n              )}\n            </Card.Body>\n          </Card>\n        )}\n      </Card>\n    </div>\n  );\n}\n\nexport default Weather;\n"]},"metadata":{},"sourceType":"module"}